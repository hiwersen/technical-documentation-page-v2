* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:root {
  --c1: white;
  --c2: rgb(230, 230, 230);
  --c3: rgb(170, 170, 170);
  --c4: #5c5c5c;
  --c5: #111111;

  --sp0x5: 0.5px;
  --sp1x0: 1px;
  --sp1x5: 1.5px;
  --sp1: 2px;
  --sp2: 4px;
  --sp3: 6px;
  --sp4: 12px;
  --sp5: 16px;
  --sp6: 20px;
  --sp7: 28px;
  --sp8: 48px;
  --sp9: 64px;
  --sp10: 80px;
  --sp11: 180px;
  --sp12: 280px;

  --ease: 0.3s ease;

  font-size: clamp(16px, 0.33vw + 13px, 20px);

  --border1: solid var(--sp1x0) var(--c2);
  --border2: solid var(--sp1) var(--c3);
  --border3: solid var(--sp0x5) var(--c4);
  --border4: solid var(--sp1x5) var(--c4);
  --border5: solid var(--sp1x0) var(--c5);
  --border6: solid var(--sp1) var(--c5);

  /* Page's settings: */
  /* Page's max-width*/
  --page-mw: 1900px;
  /* Pages padding */
  --page-pd: var(--sp6);
}

/* For Firefox */
* {
  scrollbar-width: thin;
  /* !track doesn't support transparency */
  scrollbar-color: rgba(0, 0, 0, 0.4) transparent;
}

/* For Webkit browsers (Chrome, Safari, newer versions of Opera) */
::-webkit-scrollbar {
  width: 8px;
  background: transparent;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: rgb(0, 0, 0, 0.4);
  border-radius: 4px;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  color: var(--c4);
}

main {
  display: flex;
  flex-direction: column;
  row-gap: var(--sp11);
}

.page-container {
  max-width: var(--page-mw);
  margin: 0 auto;
  padding: var(--page-pd) var(--page-pd) 0;
}

#container-content1,
#container-content3 {
  display: flex;
  column-gap: var(--sp6);
}

#container-content3 {
  margin-bottom: var(--sp11);
}

.grid-c1 {
  flex: 1;
  display: grid;
  grid-template-columns: 1fr;
  row-gap: var(--sp11);
}

.grid-c2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: var(--sp6);
  row-gap: var(--sp8);
  width: 100%;
}

/* ! Force content to stay within grid columns */
.grid-c2 > * {
  /* Critical for preventing content expansion */
  min-width: 0;
  /* Help with long text wrapping */
  overflow-wrap: break-word;
  /* For older browsers */
  word-wrap: break-word;
}

/* ! Force codeblocks to stay within grid columns */
.grid-c2 pre,
.grid-c2 code {
  /* Allow code to wrap */
  white-space: pre-wrap;
  /* Add horizontal scrolling if needed */
  overflow-x: auto;
  /* Restrict to parent width */
  max-width: 100%;
}

.flex-c {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  column-gap: var(--sp4);
  row-gap: var(--sp8);
}

header {
  background-color: var(--c1);
  color: var(--c5);
  font-size: 2em;
  padding: 0.25em;
}

section[id]:not(:first-of-type) {
  scroll-margin-top: var(--sp10);
}

h1,
h2 {
  color: var(--c5);
  font-size: 3.7em;
  line-height: 1;
  font-weight: normal;
  margin-bottom: 1em;
}

ul {
  list-style: none;
}

li:not(.navbar li) {
  position: relative;
  line-height: 1.1em;
  font-weight: initial;
  padding-left: 0.75em;
}

/* Custom bullet character */
/* ! ::marker doesn't allow margin control */
li:not(.navbar li)::before {
  content: "â€¢";
  position: absolute;
  left: 0;
}

form {
  font-size: 1.1em;
  margin: 5em auto;
  max-width: 35em;
  position: relative;
  color: var(--c4);
  font-family: "Courier New", Courier, monospace;
  display: grid;
  grid-template-columns: 1fr 3fr;
  grid-auto-rows: min-content;
  row-gap: 1.2em;
  column-gap: 0.5em;
}

label {
  text-align: right;
  color: var(--c5);
  display: inline-block;
  text-shadow: 2px 2px 2px var(--c3);
}

input,
textarea {
  width: 90%;
  font-size: inherit;
  background-color: var(--c2);
  color: var(--c5);
  font-weight: bold;
  /* Uniform text field size */
  box-sizing: border-box;
  /* Match form field borders */
  border: none;
  padding: 0.4em 0.6em;
}

textarea {
  vertical-align: top;
}

button {
  font-size: inherit;
  grid-column: 2;
  width: fit-content;
  min-width: 50%;
  align-self: start;
  background-color: var(--c5);
  color: var(--c1);
  font-weight: bold;
  border: none;
  padding: 0.5em 1em;
  transition:
    color var(--ease),
    background-color var(--ease);
}

button:hover {
  cursor: pointer;
  background-color: var(--c2);
  color: var(--c5);
}

footer {
  min-height: 30vh;
  font-style: italic;
  background-color: var(--c5);
  line-height: 1.5;
}

footer .banner {
  margin-left: calc(25vw + var(--sp6));
}

footer p {
  color: var(--c2) !important;
}

footer a {
  color: var(--c3);
}

.banner-title {
  width: min-content;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  row-gap: 1.25em;
}

.banner-title p {
  color: var(--c3);
  font-size: 2em;
}

.banner {
  flex: 1;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: var(--sp4);
}

.list {
  display: flex;
  flex-direction: column;
  gap: var(--sp4);
}

.list p {
  color: var(--c5);
}

.list ul {
  /* Implicit grid: the browser creates rows as needed
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: auto;
  gap: var(--sp2);
  */

  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: var(--sp4);

  /*
  display: flex;
  flex-wrap: wrap;
  column-gap: var(--sp4);
  row-gap: var(--sp3);
  */
}

.list li {
  border-bottom: var(--border5);
  padding-top: 0.5em;
  padding-bottom: 0.5em;
}

.navbar {
  width: 25vw;
  max-width: 100%;
  height: fit-content;
  display: flex;
  flex-direction: column;
  position: sticky;
  top: 0;
  z-index: 99;
}

.navbar:has(.nav-links.active)::before {
  content: "";
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(3px);
  z-index: -1;
}

.hamb-menu {
  position: relative;
  display: none;
  flex-direction: column;
  justify-content: space-between;
  height: calc(var(--sp7) - var(--sp2));
  width: var(--sp7);
  box-sizing: content-box;
  padding: var(--sp3);
}

/* Desktop */
@media (hover: hover) {
  .hamb-menu:hover {
    cursor: pointer;
    background-color: var(--c2);
  }
}

/* All devices - inc mobile */
.hamb-menu:active {
  background-color: var(--c2);
}

.hamb-menu span {
  display: block;
  border-bottom: var(--border6);
  height: 0;
  width: inherit;
  transform-origin: center center;
}

.hamb-menu.close {
  justify-content: center;
  align-items: center;
}

.hamb-menu.close span {
  position: absolute;
}

.hamb-menu.close span:first-of-type {
  transform: rotate(-45deg);
}

.hamb-menu.close span:last-of-type {
  transform: rotate(45deg);
}

.hamb-menu.close span:nth-of-type(2) {
  display: none;
}

.navbar-label {
  display: inline-block;
  font-family: "Courier New", Courier, monospace;
  height: 0.9em;
  /* Match the height for center alignment */
  line-height: 0.9em;
  letter-spacing: -0.03em;
  margin-bottom: -0.2em;
  text-shadow: 1px 1px 1px var(--c2);
  text-wrap: nowrap;
}

.section-in-view {
  display: none;
  height: 100%;
  align-items: center;
  font-family: "Courier New", Courier, monospace;
  letter-spacing: -0.03em;
  font-size: 0.9em;
  padding: 0.2em 0.4em;
  margin-bottom: -0.2em;
  font-weight: 100;
  text-wrap: nowrap;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.nav-links-container {
  position: relative;
}

.navbar li {
  list-style-type: none;
  margin: 0;
}

.navbar a {
  display: block;
  width: 100%;
  text-decoration: none;
  border-left: var(--border4);
  transition:
    color var(--ease),
    background-color var(--ease);
  padding: 1.5rem 2.5rem;
  text-wrap: nowrap;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.navbar a:link,
.navbar a:visited,
.navbar a:hover,
.navbar a:active {
  color: var(--c4);
}

.navbar a:hover {
  background-color: var(--c5) !important;
  color: var(--c1) !important;
}

.navbar a.view {
  background-color: var(--c2);
}

#introduction {
  min-height: 72vh;
}

#introduction h1 {
  letter-spacing: -0.09em;
  line-height: 0.8em;
  margin: 1em 0;
}

#introduction .banner-title {
  width: 100%;
  row-gap: 0;
}

#introduction .banner-title p {
  color: var(--color3);
}

#introduction .list {
  font-size: 0.85em;
}

#introduction .list ul > * {
  flex: 0.5;
}

#prerequisites {
  position: relative;
  background-color: var(--c5);
  min-height: 50vh;
  padding: var(--sp8) 0;
}

#prerequisites::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 21px;
  margin-right: -20px;
  height: 100%;
  background-color: inherit;
  z-index: 2;
}

#prerequisites .banner {
  grid-column: 2;
  width: 100%;
}

#prerequisites p {
  color: var(--c2);
}

#prerequisites h2 {
  color: var(--c3);
  font-size: 1.775em;
}

#prerequisites a {
  color: var(--c3);
}

#design.flex-c {
  row-gap: var(--sp11);
}

#design h2 {
  font-size: clamp(6.5em, 11.5vw, 9.9em);
  font-weight: bold;
  color: var(--c4);
  letter-spacing: -0.065em;
  line-height: 0.77;
  margin-left: -0.065em;
  margin-bottom: 0.5em;
  position: relative;
}

#design .line {
  position: absolute;
  bottom: -0.17em;
  left: 0.07em;
  width: 97.5%;
  border-bottom: var(--border3);
}

.first-paragraph {
  font-size: 1.6em;
}

#the_form_element h2,
#the_button_element h2 {
  letter-spacing: -0.02em;
}

#the_form_element > .first-paragraph,
#the_button_element > .first-paragraph {
  font-size: inherit;
}

/* Match .code's height to its sibling article */
.code,
pre {
  height: 100%;
}

#styling > .flex-c:first-of-type {
  flex-direction: column-reverse;
  row-gap: var(--sp6);

  /* ! BUILDING */
  /* background-color: var(--c2);*/
  padding: var(--sp6);
}

#styling h2 {
  font-size: clamp(2.5em, 9vw - 24px, 156px);
  color: var(--color4);
  letter-spacing: 0.1em;
  width: fit-content;
  margin: 0;
}

#styling > .flex-c:first-of-type > .grid-c2:nth-of-type(2) .flex-r {
  grid-column: 2;
}

#styling .banner {
  color: var(--c5);
}

.ok {
  font-size: 1.2em;
}

#codeblock-style-element {
  background-color: initial;
  font-size: inherit;
  padding: 0;
}

#styling a {
  color: inherit;
}

.css-code {
  position: relative;

  /* ! DEBUGGING */
  display: none;
}

.css-code > p:first-of-type {
  position: absolute;
  top: 12px;
  left: 24px;
  color: var(--color4) !important;
}

.code {
  font-size: clamp(0.9rem, 1.6vw, 1.2rem);
  background-color: var(--bg-color1);
  color: black;
  display: block;
  line-height: 2;
  background-color: var(--c2);
  padding: 1em;
  overflow: auto;
}

#form-container {
  /*  Dynamic resizing */
  font-size: clamp(1em, 1.55vw, 1.5em);
  border: var(--border6);
}

#the_label_input_and_textarea_elements h2 {
  font-size: clamp(3.5em, 7.8vw, 6em);
}

#the_label_input_and_textarea_elements h2 > span {
  display: block;
  text-wrap: nowrap;
}

#text-input {
  padding: var(--sp8) 0;
  border-top: var(--border6);
  border-bottom: var(--border6);
}

#title-and-label.grid-c2,
#text-input.grid-c2,
#textarea.grid-c2 {
  row-gap: var(--sp6);
}

#text-input .flex-r {
  row-gap: var(--sp8);
}

#title-and-label > .flex-c {
  row-gap: 0;
}

#title-and-label .flex-c > p:last-of-type,
#text-input .flex-r > div:last-of-type {
  color: var(--c5);
}

#submitting_data {
  /* ! BUG FIXED: don't use width: 100% 
  otherwise it will invade the sibling's apace */
  flex: 1;
}

#submitting_data .banner p {
  color: unset;
  border-top: var(--border3);
  padding-top: var(--sp4);
}

#submitting_data .banner {
  column-gap: calc(var(--sp6) + var(--sp2));
  height: fit-content;
}

.flex-r {
  display: flex;
  flex-wrap: wrap;
  row-gap: var(--sp4);
  column-gap: var(--sp6);
  height: fit-content;
}

/* ! BUILDING */
.code-css {
  display: none;
}

#container-content2 {
  /* ANIMATION SETTINGS: */
  /* Determine the length of the scroll container:
    the container height */
  --ch: 400vh;
  height: var(--ch);

  /* Determine the inset:
    - adjustment of the scrollport, or
    - length of the animation timeline */
  --step1: calc(var(--ch) - 10vh);
  --step2: calc(var(--ch) - 40vh);
  --step3: calc(var(--ch) - 100vh);
  --step4: calc(var(--ch) - 200vh);

  --inset1: var(--step1) 0%; /* 0 - 10vh */
  --inset2: var(--step2) 20vh; /* 20vh - 40vh */
  --inset3: var(--step3) 40vh; /* 40vh - 100vh */
  --inset4: var(--step4) 100vh; /* 100vh - 200vh */

  /*  Determine the timing function: */
  --tf: cubic-bezier(0.1, -0.6, 0.2, 0);

  /* The page's padding to discount: */
  --lp: var(--page-pd);

  perspective: 1000px;
  position: relative;
  width: calc(100% + calc(var(--lp) * 2));
  margin-left: calc(var(--lp) * -1);

  /* ! BUILDING: never trust what you see! */
  background-color: yellow;
  display: none;
}

#styling {
  position: sticky;
  top: 0;
  min-height: 100dvh;

  /* ANIMATION SETTINGS: */
  /* Important for maintaining 3D */
  /*
  transform-style: preserve-3d;
  animation-timeline: view(var(--inset1));
  animation-name: slideForward;
  animation-fill-mode: forwards;
  animation-timing-function: var(--tf);
  */

  /* Firefox requires this to apply the animation */
  animation-duration: 1ms;

  /* ! BUILDING: never trust what you see! */
  background-color: blue;
}

#styling h2 {
  /* ! BUILDING: never trust what you see! */
  background-color: chartreuse;
}

#styling p {
  /* ! BUG: blurry fonts */
  /* Attempts - nothing worked */
  /* Fix text blurriness issues */
  backface-visibility: hidden;
  -webkit-font-smoothing: subpixel-antialiased;

  font-smooth: never; /* For Safari */
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;

  text-rendering: optimizeLegibility;
}

#styling-content {
  transform: translateY(150px);
  /* ANIMATION SETTINGS: */
  /*
  animation-timeline: view(var(--inset2));
  animation-name: slideUp;
  animation-fill-mode: forwards;
  animation-timing-function: var(--tf);
  */
  /* Firefox requires this to apply the animation */
  animation-duration: 1ms;

  /* ! BUILDING: never trust what you see! */
  background-color: chartreuse;
  transform: translateY(0);
}

#cards-container {
  position: relative;
  /*
    The flex: 1 shorthand is equivalent to
    flex-grow: 1 (grow to take available space)
    flex-shrink: 1 (shrink if needed)
    flex-basis: 0% (start from zero width)
  */
  /* ! TODO: need fix when container's direction is row */
  flex: 1;
  width: 100%;
  align-self: center;

  /* ANIMATION SETTINGS: */
  perspective: 500px; /* Enhanced perspective effect at children */
  /* Move the viewpoint to above the center */
  perspective-origin: center -10%;
  --scroll-container-offset: 50vh;
  --view-offset: 75vh;
  --card-height: 350px;
  --z-offset: 38px;
  --y-offset: calc(var(--card-height) + 50px);
  --total-y-offset: calc(var(--y-offset) * 4 + var(--view-offset));
  --total-z-offset: calc(var(--z-offset) * 4);

  /*
  animation-timeline: view(var(--inset3));
  animation-name: slideUp;
  animation-fill-mode: forwards;
  animation-timing-function: var(--tf);
  */
  /* Firefox requires this to apply the animation */
  animation-duration: 1ms;

  /* ! BUILDING: never trust what you see! */
  background-color: deeppink;
}

.card {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  margin: auto;

  /* Apply stacked effect based on DOM position */
  --stack-y: calc(var(--view-offset) + var(--y-offset) * var(--card-index, 0));
  --stack-z: calc(var(--card-index, 0) * var(--z-offset));
  transform: translate3d(0, var(--stack-y), var(--total-z-offset));

  /* ANIMATION SETTINGS: */
  /* Create the staggered view timeline effect */
  --view-start: calc(
    var(--scroll-container-offset) + var(--total-y-offset) - var(--stack-y)
  );
  --view-end: calc(var(--stack-y) - var(--stack-z));

  animation-timeline: view(block var(--view-start) var(--view-end));
  animation-name: moveUpAndBack;
  animation-fill-mode: both;
  animation-timing-function: ease-in-out;

  /* Firefox requires this to apply the animation */
  animation-duration: 1ms;

  /* ! BUILDING: never trust what you see! */
  border: solid 1px black;
  height: var(--card-height);
  width: calc(var(--card-height) * 1.618);
  border-radius: 6px;
}

.card:nth-child(1) {
  --card-index: 0;
  z-index: 1;
  background-color: blue;
}
.card:nth-child(2) {
  --card-index: 1;
  z-index: 2;
  background-color: red;
}
.card:nth-child(3) {
  --card-index: 2;
  z-index: 3;
  background-color: purple;
}
.card:nth-child(4) {
  --card-index: 3;
  z-index: 4;
  background-color: yellow;
}
.card:nth-child(5) {
  --card-index: 4;
  z-index: 5;
  background-color: darkorange;
}

@keyframes slideUp {
  from {
    transform: translateY(50vh);
    background-color: red;
    opacity: 0;
  }
  to {
    transform: translateY(0px);
    opacity: 1;
  }
}

@keyframes slideForward {
  from {
    transform: translate3d(0, 0, -150px);
    background-color: red;
  }
  to {
    transform: translate3d(0);
  }
}

@keyframes moveUpAndBack {
  0% {
    transform: translate3d(0, var(--stack-y), var(--total-z-offset));
  }
  80% {
    transform: translate3d(0, 0, var(--total-z-offset));
  }
  100% {
    transform: translate3d(0, 0, var(--stack-z));
  }
}

@media screen and (max-width: 1300px) {
  .grid-c2 {
    display: flex;
    flex-direction: column;
  }

  #styling > .flex-c:first-of-type {
    flex-direction: initial;
  }

  .list ul {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }

  #introduction .list {
    font-size: 1em;
  }

  #introduction h1 {
    letter-spacing: -0.04em;
  }

  #prerequisites {
    padding-left: var(--sp8);
  }

  footer {
    font-size: 0.9em;
  }

  footer .banner {
    width: unset;
  }
}

@media screen and (max-width: 800px) {
  #container-content1,
  #container-content3 {
    display: flex;
    flex-direction: column;
    column-gap: var(--sp8);
  }

  #design {
    gap: var(--sp10);
  }

  main {
    padding: 0 var(--sp6);
  }

  h1,
  h2 {
    font-size: 3em;
  }

  .navbar {
    top: var(--sp4);
    width: 100%;
  }

  .navbar.menu-only {
    width: fit-content;
  }

  .navbar.menu-only header {
    /* Don't use gray colors against black background */
    box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.3);
  }

  header {
    font-size: 1.5em;
    background-color: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(5px);
    margin: 0;
    border: var(--border6);
    display: flex;
    align-items: center;
    gap: var(--sp5);
    min-height: calc(var(--sp9) - var(--sp3));
  }

  .nav-links-container {
    width: 75%;
    max-width: 100%;
    min-width: var(--sp12);
  }

  .navbar-label.hide,
  .section-in-view.hide,
  .nav-links-container.hide {
    /* ! BUG FIXED:
    for some reason the .nav-links-container
    affects the header's width
    despite being siblings
    FIX: remove nav-links from the document flow */
    display: none !important;
  }

  .nav-links {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }

  .nav-links.active {
    display: initial;
  }

  .nav-links a {
    /* ! BUG: Ellipsis doesn't work with flexbox ? */
    height: calc(var(--sp9) - var(--sp3));
    display: flex;
    align-items: center;
    padding: 0 1.5em;
    border-bottom: var(--border3);
  }

  .hamb-menu {
    display: flex;
  }

  .section-in-view {
    display: inline-block;
  }

  .navbar ul {
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(5px);
    width: 100%;
  }

  .navbar a.view {
    color: var(--c3) !important;
  }

  .navbar a:link,
  .navbar a:visited,
  .navbar a:hover,
  .navbar a:active {
    color: var(--c1);
    font-size: 1.2em;
  }

  .navbar a:hover {
    background-color: var(--c2) !important;
    color: var(--c5) !important;
  }

  #container-content3 .navbar {
    display: none;
  }

  .first-paragraph {
    font-size: 1.4em;
  }

  #introduction {
    min-height: initial;
  }

  #introduction h1 {
    margin: calc(1em + 47px) 0 1em;
    letter-spacing: unset;
  }

  .banner-title p {
    font-size: 1.6em;
  }

  #prerequisites::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 21px;
    margin-left: -20px;
    height: 100%;
    background-color: inherit;
    z-index: 2;
  }

  #prerequisites {
    padding: var(--sp8) 0;
  }

  footer .banner {
    margin-left: unset;
  }
}

@media screen and (max-width: 580px) {
  #introduction h1 {
    letter-spacing: -0.04em;
  }

  #design > div:first-of-type {
    display: flex;
    justify-content: center;
  }

  .list ul {
    grid-template-columns: 1fr !important;
  }

  main {
    row-gap: var(--sp10);
  }

  #container-content3 {
    margin-bottom: var(--sp10);
  }

  .grid-c1 {
    gap: var(--sp10);
  }

  .flex-c {
    gap: var(--sp8);
  }

  #design.flex-c {
    row-gap: var(--sp10);
  }

  .banner p {
    width: initial;
  }

  form {
    grid-template-columns: 1fr;
    grid-auto-rows: auto;
    row-gap: 0.8em;
    width: 80%;
    justify-self: center;
    /* ! Match bottom's margin displacement */
    margin-top: 39px;
    margin-bottom: 39px;
  }

  label {
    text-align: unset;
    margin-bottom: -0.5em;
  }

  input,
  textarea {
    width: 100%;
  }

  button {
    grid-column: unset;
    align-self: center;
    margin-top: 1.4em;
    margin-bottom: 0;
  }
}

@media screen and (max-width: 510px) {
  header {
    font-size: 1.25em;
    gap: var(--sp3);
  }

  h1,
  h2 {
    font-size: 2.5em;
  }

  button {
    justify-self: center;
  }

  .list li {
    max-width: unset;
  }

  .banner {
    flex: initial;
  }
}

@media screen and (max-width: 450px) {
  h1,
  h2 {
    font-size: 2.3em;
  }

  .code {
    padding: 0.4em;
  }
}
